colorscheme cyanide
add-highlighter global/ number-lines -hlcursor -relative -separator "  " -cursor-separator " |"
add-highlighter global/ show-matching
# add-highlighter global/ wrap -word -indent
set-option global tabstop 2
set-option global indentwidth 2
set-option global scrolloff 3,3

map -docstring "yank the selection into the clipboard" global user y "<a-|> wl-copy<ret>"
map -docstring "paste the clipboard" global user p "<a-!> wl-paste --no-newline<ret>"

source "%val{config}/plugins/plug.kak/rc/plug.kak"
plug "andreyorst/plug.kak" noload

plug "gustavo-hms/luar" %{
  require-module luar
}

plug "evanrelf/byline.kak" config %{
  require-module "byline"
}

plug "eraserhd/kak-ansi" 

plug "andreyorst/powerline.kak" defer powerline_zenburn %{
    powerline-theme zenburn
} config %{
    powerline-start
}
hook global InsertCompletionShow .* %{
  try %{
    execute-keys -draft 'h<a-K>\h<ret>'
    map window insert <tab> <c-n>
    map window insert <s-tab> <c-p>
    hook -once -always window InsertCompletionHide .* %{
      unmap window insert <tab> <c-n>
      unmap window insert <s-tab> <c-p>
    }
  }
}

hook global WinSetOption filetype=yaml %{
      set-option window lintcmd %{
        run() {
           yamllint -f parsable "$1" | sed 's/ \[\(.*\)\] / \1: /'
      } && run }
}

define-command -override my-surround-add -params 2 %{
  evaluate-commands -draft -save-regs '"' %{
    set-register '"' %arg{1}
    execute-keys -draft P
    set-register '"' %arg{2}
    execute-keys -draft p
  }
}

eval %sh{kak-lsp --kakoune -s $kak_session}  # Not needed if you load it with plug.kak.
hook global WinSetOption filetype=(rust|python|go|javascript|typescript|c|cpp) %{
    lsp-enable-window
}
